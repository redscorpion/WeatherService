//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.17 at 09:53:43 AM CEST 
//


package com.tieto.services.weather.response.beans;

import java.math.BigDecimal;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.datatype.XMLGregorianCalendar;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for weatherDTO complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="weatherDTO">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;all>
 *         &lt;element name="location" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="temp_c" type="{http://www.w3.org/2001/XMLSchema}decimal"/>
 *         &lt;element name="weather" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="relative_humidity" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="wind_dir" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="wind_string" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="observation_time" type="{http://www.w3.org/2001/XMLSchema}dateTime"/>
 *       &lt;/all>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "weatherDTO", propOrder = {

})
public class WeatherDTO
    implements Equals, HashCode, ToString
{

    @XmlElement(required = true)
    protected String location;
    @XmlElement(name = "temp_c", required = true)
    protected BigDecimal tempC;
    @XmlElement(required = true)
    protected String weather;
    @XmlElement(name = "relative_humidity", required = true)
    protected String relativeHumidity;
    @XmlElement(name = "wind_dir", required = true)
    protected String windDir;
    @XmlElement(name = "wind_string", required = true)
    protected String windString;
    @XmlElement(name = "observation_time", required = true)
    @XmlSchemaType(name = "dateTime")
    protected XMLGregorianCalendar observationTime;

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setLocation(String value) {
        this.location = value;
    }

    /**
     * Gets the value of the tempC property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getTempC() {
        return tempC;
    }

    /**
     * Sets the value of the tempC property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setTempC(BigDecimal value) {
        this.tempC = value;
    }

    /**
     * Gets the value of the weather property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWeather() {
        return weather;
    }

    /**
     * Sets the value of the weather property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWeather(String value) {
        this.weather = value;
    }

    /**
     * Gets the value of the relativeHumidity property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRelativeHumidity() {
        return relativeHumidity;
    }

    /**
     * Sets the value of the relativeHumidity property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRelativeHumidity(String value) {
        this.relativeHumidity = value;
    }

    /**
     * Gets the value of the windDir property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWindDir() {
        return windDir;
    }

    /**
     * Sets the value of the windDir property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWindDir(String value) {
        this.windDir = value;
    }

    /**
     * Gets the value of the windString property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getWindString() {
        return windString;
    }

    /**
     * Sets the value of the windString property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setWindString(String value) {
        this.windString = value;
    }

    /**
     * Gets the value of the observationTime property.
     * 
     * @return
     *     possible object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public XMLGregorianCalendar getObservationTime() {
        return observationTime;
    }

    /**
     * Sets the value of the observationTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link XMLGregorianCalendar }
     *     
     */
    public void setObservationTime(XMLGregorianCalendar value) {
        this.observationTime = value;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theLocation;
            theLocation = this.getLocation();
            strategy.appendField(locator, this, "location", buffer, theLocation);
        }
        {
            BigDecimal theTempC;
            theTempC = this.getTempC();
            strategy.appendField(locator, this, "tempC", buffer, theTempC);
        }
        {
            String theWeather;
            theWeather = this.getWeather();
            strategy.appendField(locator, this, "weather", buffer, theWeather);
        }
        {
            String theRelativeHumidity;
            theRelativeHumidity = this.getRelativeHumidity();
            strategy.appendField(locator, this, "relativeHumidity", buffer, theRelativeHumidity);
        }
        {
            String theWindDir;
            theWindDir = this.getWindDir();
            strategy.appendField(locator, this, "windDir", buffer, theWindDir);
        }
        {
            String theWindString;
            theWindString = this.getWindString();
            strategy.appendField(locator, this, "windString", buffer, theWindString);
        }
        {
            XMLGregorianCalendar theObservationTime;
            theObservationTime = this.getObservationTime();
            strategy.appendField(locator, this, "observationTime", buffer, theObservationTime);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof WeatherDTO)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final WeatherDTO that = ((WeatherDTO) object);
        {
            String lhsLocation;
            lhsLocation = this.getLocation();
            String rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation)) {
                return false;
            }
        }
        {
            BigDecimal lhsTempC;
            lhsTempC = this.getTempC();
            BigDecimal rhsTempC;
            rhsTempC = that.getTempC();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "tempC", lhsTempC), LocatorUtils.property(thatLocator, "tempC", rhsTempC), lhsTempC, rhsTempC)) {
                return false;
            }
        }
        {
            String lhsWeather;
            lhsWeather = this.getWeather();
            String rhsWeather;
            rhsWeather = that.getWeather();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "weather", lhsWeather), LocatorUtils.property(thatLocator, "weather", rhsWeather), lhsWeather, rhsWeather)) {
                return false;
            }
        }
        {
            String lhsRelativeHumidity;
            lhsRelativeHumidity = this.getRelativeHumidity();
            String rhsRelativeHumidity;
            rhsRelativeHumidity = that.getRelativeHumidity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relativeHumidity", lhsRelativeHumidity), LocatorUtils.property(thatLocator, "relativeHumidity", rhsRelativeHumidity), lhsRelativeHumidity, rhsRelativeHumidity)) {
                return false;
            }
        }
        {
            String lhsWindDir;
            lhsWindDir = this.getWindDir();
            String rhsWindDir;
            rhsWindDir = that.getWindDir();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windDir", lhsWindDir), LocatorUtils.property(thatLocator, "windDir", rhsWindDir), lhsWindDir, rhsWindDir)) {
                return false;
            }
        }
        {
            String lhsWindString;
            lhsWindString = this.getWindString();
            String rhsWindString;
            rhsWindString = that.getWindString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "windString", lhsWindString), LocatorUtils.property(thatLocator, "windString", rhsWindString), lhsWindString, rhsWindString)) {
                return false;
            }
        }
        {
            XMLGregorianCalendar lhsObservationTime;
            lhsObservationTime = this.getObservationTime();
            XMLGregorianCalendar rhsObservationTime;
            rhsObservationTime = that.getObservationTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "observationTime", lhsObservationTime), LocatorUtils.property(thatLocator, "observationTime", rhsObservationTime), lhsObservationTime, rhsObservationTime)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation);
        }
        {
            BigDecimal theTempC;
            theTempC = this.getTempC();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "tempC", theTempC), currentHashCode, theTempC);
        }
        {
            String theWeather;
            theWeather = this.getWeather();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "weather", theWeather), currentHashCode, theWeather);
        }
        {
            String theRelativeHumidity;
            theRelativeHumidity = this.getRelativeHumidity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relativeHumidity", theRelativeHumidity), currentHashCode, theRelativeHumidity);
        }
        {
            String theWindDir;
            theWindDir = this.getWindDir();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windDir", theWindDir), currentHashCode, theWindDir);
        }
        {
            String theWindString;
            theWindString = this.getWindString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "windString", theWindString), currentHashCode, theWindString);
        }
        {
            XMLGregorianCalendar theObservationTime;
            theObservationTime = this.getObservationTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "observationTime", theObservationTime), currentHashCode, theObservationTime);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
