<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop.xsd ">

	<!-- Set-up location mapper -->

	<bean id="weatherEndpointResponseLocationMappingFile"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:weather_endpoint_response_location_mapping
				</value>
			</list>
		</property>
	</bean>

	<bean id="weatherEndpointRequestLocationMappingFile"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:weather_endpoint_request_location_mapping
				</value>
			</list>
		</property>
	</bean>

	<bean id="rest_weather_endpoint_config_responseLocationMapping"
		class="java.util.Properties">
		<constructor-arg ref="weatherEndpointResponseLocationMappingFile" />
	</bean>

	<bean id="rest_weather_endpoint_config_requestLocationMapping"
		class="java.util.Properties">
		<constructor-arg ref="weatherEndpointRequestLocationMappingFile" />
	</bean>

	<bean id="rest_weather_locationMapper"
		class="com.tieto.services.weather.response.mapper.impl.PropertiesBasedLocationMapper">
		<constructor-arg name="requestMapping"
			ref="rest_weather_endpoint_config_requestLocationMapping" />
		<constructor-arg name="responseMapping"
			ref="rest_weather_endpoint_config_responseLocationMapping" />
	</bean>

	<!-- Set-up aspectj autoproxy -->

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- Scan for the weather service REST endpoint (controller) -->
	<context:component-scan base-package="com.tieto.services.weather.endpoint.rest" />

	<!-- Set-up response converters into XML/JSON -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="false">
			<ref bean="jacksonMessageConverter" />
			<ref bean="jaxb2Converter" />
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- JSON message converter -->
	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="objectMapper" ref="jaxbJacksonObjectMapper" />
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="application" />
					<constructor-arg index="1" value="json" />
					<constructor-arg index="2" value="UTF-8" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- XML message converter -->
	<bean id="jaxb2Converter"
		class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<constructor-arg ref="jaxb2Marshaller" />
		<property name="supportedMediaTypes">
			<list>
				<bean class="org.springframework.http.MediaType">
					<constructor-arg index="0" value="application" />
					<constructor-arg index="1" value="xml" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- Set-up Jackson to use JAXB annotations -->
	<bean id="jaxbAnnotationIntrospector"
		class="com.fasterxml.jackson.module.jaxb.JaxbAnnotationIntrospector" />

	<bean id="jaxbJacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="annotationIntrospector" ref="jaxbAnnotationIntrospector" />
	</bean>

	<!-- Set-up JAXB marshaller -->
	<bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<property name="contextPath" value="com.tieto.services.weather.response.beans" />
	</bean>

</beans>
